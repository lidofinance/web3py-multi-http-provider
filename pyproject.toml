[tool.poetry]
name = "web3-multi-provider"
version = "2.2.0"
description = "Web3py provider that makes it easy to switch between different blockchain nodes to make sure application will be be online if main blockchain node will be unavailable."
authors = ["Raman <raman.s@lido.fi>"]
license = "MIT License"
readme = "README.md"
include = [
    "LICENSE",
]
packages = [
  {include = "web3_multi_provider"},
  {include = "web3_multi_provider/py.typed"},
]

[tool.poetry.dependencies]
python = ">=3.12,<4"
web3 = ">=7,<8"
prometheus-client = { version = "^0.21.1", optional = true }

[tool.poetry.extras]
metrics = ["prometheus-client"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pre-commit = "^4.0.1"
isort = "^5.13.2"
mypy = "^1.13.0"
pylint = "^3.3.1"
black = "^24.10.0"
pytest-mock = "^3.14.0"
prometheus-client = "^0.21.1"
requests = "^2.32.3"
aiohttp = "^3.11.14"
responses = "^0.25.7"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
